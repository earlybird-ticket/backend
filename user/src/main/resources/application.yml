spring:
  config:
    import: optional:file:.env[.properties]

  application:
    name: user-service
  jackson:
    property-naming-strategy: SNAKE_CASE
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${POSTGRES_HOST:localhost}:${POSTGRES_USER_PORT:5432}/${POSTGRES_DB:postgres}
    username: ${POSTGRES_USER:postgres}
    password: ${POSTGRES_PASSWORD:postgres}

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        show_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect

eureka:
  instance:
    instance-id: ${spring.application.name}:${server.port}
    prefer-ip-address: true
    hostname: ${spring.application.name}
  client:
    service-url:
      defaultZone: http://${EUREKA_SERVER_HOST:localhost}:${EUREKA_SERVER_PORT:18080}/eureka

server:
  port: 18084
  tomcat:
    mbeanregistry:
      enabled: true

management:
  endpoints:
    jmx:
      exposure:
        include: prometheus
    web:
      exposure:
        include: refresh,health,beans,busrefresh,info,metrics,prometheus
  metrics:
    distribution:
      percentiles-histogram:
        all: true
    enable:
      jvm: true
  zipkin:
    tracing:
      endpoint: "http://${ZIPKIN_HOST:localhost}:${ZIPKIN_PORT:9411}/api/v2/spans"
  tracing:
    sampling:
      probability: ${ZIPKIN_SAMPLING_PROBABILITY:1.0}
  prometheus:
    metrics:
      export:
        enabled: true
