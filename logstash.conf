    input {
      beats {
        port => 5044
      }
    }
    filter {
      ## 1. message를 JSON 파싱
      json {
        source => "message"
        skip_on_invalid_json => true
      }

      ## 2. type 별로 grok 추가 파싱
      if [type] == "method-entry" {
        grok {
          match => {
            "message" => [
              '"method":"%{DATA:method_name}","depth":"%{DATA:method_depth}","args":"%{GREEDYDATA:method_args}"'
            ]
          }
        }
      }

      if [type] == "method-exit" {
        grok {
          match => {
            "message" => [
              '"method":"%{DATA:method_name}","depth":"%{DATA:method_depth}","duration_ms":%{NUMBER:method_duration_ms:int},"statusCode":%{NUMBER:status_code:int}'
            ]
          }
        }
      }

      ## 3. 나머지 (Outbox, Kafka 관련)는 그대로
      grok {
        match => {
          "message" => [
            "\\[Outbox 발행\\] id = %{NUMBER:outbox_id:int}, topic = %{DATA:topic}, payload = %{GREEDYDATA:payload_json}",
            "Kafka Interceptor Log: %{GREEDYDATA:kafka_interceptor_json}",
            "Kafka Acknowledgement Log: \\{partition=%{NUMBER:kafka_partition:int}, offset=%{NUMBER:kafka_offset:int}, topic=%{DATA:kafka_topic}, event=%{DATA:kafka_event}, timestamp=%{NUMBER:kafka_timestamp:long}, status=%{WORD:kafka_status}\\}",
            "\\[Kafka 발행 성공\\] traceId = %{DATA:kafka_traceId}, offset = %{NUMBER:kafka_offset:int}",
            "Received Kafka message = %{GREEDYDATA:kafka_received_payload}, traceId = %{DATA:kafka_traceId}"
          ]
        }
        break_on_match => false
      }

      ## 4. 추가 JSON 파싱
      if [kafka_interceptor_json] {
        json {
          source => "kafka_interceptor_json"
          target => "kafka_interceptor"
        }
      }

      if [kafka_received_payload] {
        json {
          source => "kafka_received_payload"
          target => "kafka_received"
        }
      }

      ## 5. timestamp 정렬
      date {
        match => ["@timestamp", "ISO8601"]
        target => "@timestamp"
      }

      ## 6. service 기본값 설정
      if ![service] {
        mutate {
          add_field => { "service" => "earlybird-common" }
        }
      }
    }

    output {
      elasticsearch {
        hosts => ["http://monitoring-elasticsearch:9200"]
        index => "monitoring-logs-%{+YYYY.MM.dd}"
      }

      ## 디버깅용 콘솔 출력
      stdout {
        codec => rubydebug
      }
    }